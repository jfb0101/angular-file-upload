{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 135cc178d79795ba0e15?5e61","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/Pipeline.js?322f","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_Pipeline","_Pipeline2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","CONFIG","name","value","options","serviceFileUploader","serviceFileLikeObject","serviceFileItem","serviceFileDirective","serviceFileSelect","serviceFileDrop","serviceFileOver","servicePipeline","directive","directiveFileSelect","directiveFileDrop","directiveFileOver","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Pipeline","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","_classCallCheck","instance","Constructor","TypeError","__identity","fileUploaderOptions","$rootScope","$http","$window","$timeout","File","FormData","settings","copy","extend","isUploading","_nextIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","prototype","addToQueue","files","_this","incomingQueue","isArrayLikeObject","Array","slice","arrayOfFilters","_getFilters","count","length","addedFileItems","next","something","shift","isUndefined","done","fileLikeObject","isFile","pipes","_convertFiltersToPipes","pipeline","onThrown","err","originalFilter","pipe","_err$args","_slicedToArray","args","_onWhenAddingFileFailed","onSuccessful","fileItem","push","_onAfterAddingFile","exec","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","index","getIndexOfItem","item","cancel","splice","_destroy","clearQueue","remove","uploadItem","transport","isHTML5","_prepareToUploading","_onBeforeUploadItem","isCancel","cancelItem","_this2","prop","abort","dummy","undefined","onNextTick","_onCancelItem","apply","concat","_onCompleteItem","items","getNotUploadedItems","filter","forEach","upload","cancelAll","constructor","isFileLikeObject","isNumber","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","_this3","key","object","onAfterAddingAll","fileItems","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","response","status","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","notUploaded","uploaded","ratio","current","Math","round","isArray","names","match","_this4","map","bind","isAsync","$$phase","$apply","size","type","_isSuccessCode","_transformResponse","headersGetter","_headersGetter","defaults","transformResponse","transformFn","_parseHeaders","val","i","parsed","split","line","trim","toLowerCase","parsedHeaders","_xhrTransport","getCorrectBlob","file","Blob","blob","sendable","_this5","xhr","_xhr","XMLHttpRequest","_file","append","onprogress","event","lengthComputable","total","_onProgressItem","onload","getAllResponseHeaders","gist","onerror","_onErrorItem","onabort","open","setRequestHeader","send","_iframeTransport","_this6","form","element","iframe","Date","now","input","_input","_form","replaceWith","element_","action","target","enctype","encoding","html","contentDocument","body","innerHTML","e","_onSuccessItem","unbind","after","submit","_onBeforeUpload","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","nextItem","isDefined","isObject","inherit","source","create","super_","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","_angular","$inject","fileOrInput","isInput","isElement","fakePathOrObject","postfix","isString","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","$compile","uploader","some","isSuccess","isError","_replaceNode","message","code","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","extendedOptions","$destroy","change","removeAttr","getOptions","getFilters","isEmptyAfterSelection","attr","onChange","_toConsumableArray","arr2","from","$q","arguments","Error","deferred","defer","onFulfilled","onRejected","promise","then","isDone","Boolean","_len","_key","dragover","dragleave","onDrop","transfer","_getTransfer","_preventAndStop","_removeOverClass","onDragOver","_haveFiles","types","dropEffect","_addOverClass","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":";;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,uBAAAD,IAEAD,EAAA,uBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAUL,EAAQD,EAASM,GEtDjC,YF8GC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GE3GxF,GAAAG,GAAAb,EAAA,GFyDKc,EAAWL,EAAuBI,GEtDvCE,EAAAf,EAAA,GF0DKgB,EAAYP,EAAuBM,GEvDxCE,EAAAjB,EAAA,GF2DKkB,EAAiBT,EAAuBQ,GE1D7CE,EAAAnB,EAAA,GF8DKoB,EAAmBX,EAAuBU,GE7D/CE,EAAArB,EAAA,GFiEKsB,EAAab,EAAuBY,GEhEzCE,EAAAvB,EAAA,GFoEKwB,EAAkBf,EAAuBc,GEnE9CE,EAAAzB,EAAA,GFuEK0B,EAAejB,EAAuBgB,GEtE3CE,EAAA3B,EAAA,GF0EK4B,EAAanB,EAAuBkB,GEzEzCE,EAAA7B,EAAA,GF6EK8B,EAAarB,EAAuBoB,GE5EzCE,EAAA/B,EAAA,IFgFKgC,EAAavB,EAAuBsB,GE7EzCE,EAAAjC,EAAA,IFiFKkC,EAAezB,EAAuBwB,GEhF3CE,EAAAnC,EAAA,IFoFKoC,EAAa3B,EAAuB0B,GEnFzCE,EAAArC,EAAA,IFuFKsC,EAAa7B,EAAuB4B,EEpFzCE,SACK5C,OAAO6C,UAAOC,SACdC,MAAM,sBAAuBC,WAC7BlD,QAAQ,eAAgBmD,WACxBnD,QAAQ,iBAAkBoD,WAC1BpD,QAAQ,WAAYqD,WACpBrD,QAAQ,gBAAiBsD,WACzBtD,QAAQ,aAAcuD,WACtBvD,QAAQ,WAAYwD,WACpBxD,QAAQ,WAAYyD,WACpBzD,QAAQ,WAAY0D,WACpBC,UAAU,eAAgBC,WAC1BD,UAAU,aAAcE,WACxBF,UAAU,aAAcG,WACxBC,KACG,eACA,iBACA,WACA,gBACA,aACA,WACA,WACA,WACA,SAASC,EAAcC,EAAgBC,EAAUC,EAAeC,EAAYC,EAAUC,EAAUC,GAE5FP,EAAaC,eAAiBA,EAC9BD,EAAaE,SAAWA,EACxBF,EAAaG,cAAgBA,EAC7BH,EAAaI,WAAaA,EAC1BJ,EAAaK,SAAWA,EACxBL,EAAaM,SAAWA,EACxBN,EAAaO,SAAWA,MFsE9B,SAAUrE,EAAQD,GG7HxBC,EAAAD,SAAkB+C,KAAA,sBHmIZ,SAAU9C,EAAQD,GInIxB,YJuICuE,QAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,SItILuD,IAAK,IACLC,MAAO,OACPC,WACAC,SACAC,SAAU,EACVC,YAAY,EACZC,mBAAmB,EACnBC,OAAQ,OACRC,WACAC,YACAC,WAAYC,OAAOC,UACnBC,iBAAiB,EACjBC,kBAAkB,IJ4IhB,SAAUtF,EAAQD,EAASM,GK5JjC,YL4KC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCK1JlG,QAASC,GAAWC,EAAqBC,EAAYC,EAAOC,EAASC,EAAUjC,EAAgBC,EAAUK,GAAU,GAI1H4B,GAEIF,EAFJE,KACAC,EACIH,EADJG,SAIEpC,EATwH,WAkB1H,QAAAA,GAAYd,GAASuC,EAAApF,KAAA2D,EACjB,IAAIqC,GAAWC,EAAKR,EAEpBS,GAAOlG,KAAMgG,EAAUnD,GACnBsD,aAAa,EACbC,WAAY,EACZC,aAAcC,UAAYC,QAAUC,WAIxCxG,KAAK6E,QAAQ4B,SAAS9D,KAAM,aAAc+D,GAAI1G,KAAK2G,oBACnD3G,KAAK6E,QAAQ4B,SAAS9D,KAAM,SAAU+D,GAAI1G,KAAK4G,gBA7BuE,MAAAjD,GAAAkD,UAqC1HC,WArC0H,SAqC/GC,EAAOlE,EAASgC,GAAS,GAAAmC,GAAAhH,KAC5BiH,EAAgBjH,KAAKkH,kBAAkBH,GAASI,MAAMN,UAAUO,MAAM7G,KAAKwG,IAASA,GACpFM,EAAiBrH,KAAKsH,YAAYzC,GAClC0C,EAAQvH,KAAKwE,MAAMgD,OACnBC,KAEAC,EAAO,QAAPA,KACA,GAAIC,GAAYV,EAAcW,OAE9B,IAAIC,EAAYF,GACZ,MAAOG,IAGX,IAAIC,GAAiBf,EAAKgB,OAAOL,GAAaA,EAAY,GAAI/D,GAAe+D,GACzEM,EAAQjB,EAAKkB,uBAAuBb,GACpCc,EAAW,GAAIjE,GAAS+D,GACxBG,EAAW,SAACC,GAAQ,GACfC,GAAkBD,EAAIE,KAAtBD,eADeE,EAAAC,EAEYJ,EAAIK,KAFhB,GAEfX,EAFeS,EAAA,GAEC3F,EAFD2F,EAAA,EAGpBxB,GAAK2B,wBAAwBZ,EAAgBO,EAAgBzF,GAC7D6E,KAEAkB,EAAe,SAACb,EAAgBlF,GAChC,GAAIgG,GAAW,GAAIhF,GAAJmD,EAAmBe,EAAgBlF,EAClD4E,GAAeqB,KAAKD,GACpB7B,EAAKxC,MAAMsE,KAAKD,GAChB7B,EAAK+B,mBAAmBF,GACxBnB,IAEJS,GAASC,SAAWA,EACpBD,EAASS,aAAeA,EACxBT,EAASa,KAAKjB,EAAgBlF,IAG9BiF,EAAO,WACJd,EAAKxC,MAAMgD,SAAWD,IACrBP,EAAKiC,kBAAkBxB,GACvBT,EAAKvC,SAAWuC,EAAKkC,qBAGzBlC,EAAKmC,UACDnC,EAAKtC,YAAYsC,EAAKoC,YAG9B1B,MAjFsH/D,EAAAkD,UAuF1HwC,gBAvF0H,SAuF1GzG,GACZ,GAAI0G,GAAQtJ,KAAKuJ,eAAe3G,GAC5B4G,EAAOxJ,KAAKwE,MAAM8E,EACnBE,GAAKrD,aAAaqD,EAAKC,SAC1BzJ,KAAKwE,MAAMkF,OAAOJ,EAAO,GACzBE,EAAKG,WACL3J,KAAKyE,SAAWzE,KAAKkJ,qBA7FiGvF,EAAAkD,UAkG1H+C,WAlG0H,WAmGtH,KAAM5J,KAAKwE,MAAMgD,QACbxH,KAAKwE,MAAM,GAAGqF,QAElB7J,MAAKyE,SAAW,GAtGsGd,EAAAkD,UA4G1HiD,WA5G0H,SA4G/GlH,GACP,GAAI0G,GAAQtJ,KAAKuJ,eAAe3G,GAC5B4G,EAAOxJ,KAAKwE,MAAM8E,GAClBS,EAAY/J,KAAKgK,QAAU,gBAAkB,kBAEjDR,GAAKS,sBACFjK,KAAKmG,cAERnG,KAAKkK,oBAAoBV,GACrBA,EAAKW,WAETX,EAAKrD,aAAc,EACnBnG,KAAKmG,aAAc,EACnBnG,KAAK+J,GAAWP,GAChBxJ,KAAKmJ,aA1HiHxF,EAAAkD,UAgI1HuD,WAhI0H,SAgI/GxH,GAAO,GAAAyH,GAAArK,KACVsJ,EAAQtJ,KAAKuJ,eAAe3G,GAC5B4G,EAAOxJ,KAAKwE,MAAM8E,GAClBgB,EAAOtK,KAAKgK,QAAU,OAAS,OACnC,IAAKR,EAEL,GADAA,EAAKW,UAAW,EACbX,EAAKrD,YAEJqD,EAAKc,GAAMC,YACR,CACH,GAAIC,IAASC,OAAW,MACpBC,EAAa,WACbL,EAAKM,cAALC,MAAAP,GAAmBb,GAAnBqB,OAA4BL,IAC5BH,EAAKS,gBAALF,MAAAP,GAAqBb,GAArBqB,OAA8BL,IAElC3E,GAAS6E,KA/IyG/G,EAAAkD,UAqJ1HuC,UArJ0H,WAsJtH,GAAI2B,GAAQ/K,KAAKgL,sBAAsBC,OAAO,SAAAzB,GAAA,OAASA,EAAKrD,aACxD4E,GAAMvD,SAEV0D,EAAQH,EAAO,SAAAvB,GAAA,MAAQA,GAAKS,wBAC5Bc,EAAM,GAAGI,WA1J6GxH,EAAAkD,UA+J1HuE,UA/J0H,WAgKtH,GAAIL,GAAQ/K,KAAKgL,qBACjBE,GAAQH,EAAO,SAAAvB,GAAA,MAAQA,GAAKC,YAjK0F9F,EAAAkD,UAyK1HmB,OAzK0H,SAyKnHpF,GACH,MAAO5C,MAAKqL,YAAYrD,OAAOpF,IA1KuFe,EAAAkD,UAkL1HyE,iBAlL0H,SAkLzG1I,GACb,MAAO5C,MAAKqL,YAAYC,iBAAiB1I,IAnL6Ee,EAAAkD,UA0L1HK,kBA1L0H,SA0LxGtE,GACd,MAAO5C,MAAKqL,YAAYnE,kBAAkBtE,IA3L4Ee,EAAAkD,UAkM1H0C,eAlM0H,SAkM3G3G,GACX,MAAO2I,GAAS3I,GAASA,EAAQ5C,KAAKwE,MAAMgH,QAAQ5I,IAnMkEe,EAAAkD,UAyM1HmE,oBAzM0H,WA0MtH,MAAOhL,MAAKwE,MAAMyG,OAAO,SAAAzB,GAAA,OAASA,EAAKiC,cA1M+E9H,EAAAkD,UAgN1H6E,cAhN0H,WAiNtH,MAAO1L,MAAKwE,MACPyG,OAAO,SAAAzB,GAAA,MAASA,GAAKmC,UAAYnC,EAAKrD,cACtCyF,KAAK,SAACC,EAAOC,GAAR,MAAkBD,GAAMvC,MAAQwC,EAAMxC,SAnNsE3F,EAAAkD,UAwN1HkF,QAxN0H,WAwNhH,GAAAC,GAAAhM,IACNkL,GAAQlL,KAAKqG,YAAa,SAAC4F,GACvBf,EAAQc,EAAK3F,YAAY4F,GAAM,SAACC,GAC5BA,EAAOH,eA3NuGpI,EAAAkD,UAmO1HsF,iBAnO0H,SAmOzGC,KAnOyGzI,EAAAkD,UAyO1HwF,kBAzO0H,SAyOxGxD,KAzOwGlF,EAAAkD,UAiP1HyF,uBAjP0H,SAiPnG9C,EAAMyB,EAAQpI,KAjPqFc,EAAAkD,UAuP1H0F,mBAvP0H,SAuPvG1D,KAvPuGlF,EAAAkD,UA8P1H2F,eA9P0H,SA8P3G3D,EAAUpE,KA9PiGd,EAAAkD,UAoQ1H4F,cApQ0H,SAoQ5GhI,KApQ4Gd,EAAAkD,UA6Q1H6F,cA7Q0H,SA6Q5GlD,EAAMmD,EAAUC,EAAQrI,KA7QoFZ,EAAAkD,UAsR1HgG,YAtR0H,SAsR9GrD,EAAMmD,EAAUC,EAAQrI,KAtRsFZ,EAAAkD,UA+R1HiG,aA/R0H,SA+R7GtD,EAAMmD,EAAUC,EAAQrI,KA/RqFZ,EAAAkD,UAwS1HkG,eAxS0H,SAwS3GvD,EAAMmD,EAAUC,EAAQrI,KAxSmFZ,EAAAkD,UA6S1HmG,cA7S0H,aAAArJ,EAAAkD,UAwT1HqC,kBAxT0H,SAwTxGtG,GACd,GAAG5C,KAAK2E,kBAAmB,MAAO/B,IAAS,CAE3C,IAAIqK,GAAcjN,KAAKgL,sBAAsBxD,OACzC0F,EAAWD,EAAcjN,KAAKwE,MAAMgD,OAASyF,EAAcjN,KAAKwE,MAAMgD,OACtE2F,EAAQ,IAAMnN,KAAKwE,MAAMgD,OACzB4F,GAAWxK,GAAS,GAAKuK,EAAQ,GAErC,OAAOE,MAAKC,MAAMJ,EAAWC,EAAQC,IAhUiFzJ,EAAAkD,UAwU1HS,YAxU0H,SAwU9GzC,GACR,IAAIA,EAAS,MAAO7E,MAAK6E,OACzB,IAAG0I,EAAQ1I,GAAU,MAAOA,EAC5B,IAAI2I,GAAQ3I,EAAQ4I,MAAM,WAC1B,OAAOzN,MAAK6E,QACPoG,OAAO,SAAAA,GAAA,MAAUuC,GAAMhC,QAAQP,EAAOtI,SAAU,KA7UiEgB,EAAAkD,UAoV3HqB,uBApV2H,SAoVpGrD,GAAS,GAAA6I,GAAA1N,IAC3B,OAAO6E,GACF8I,IAAI,SAAA1C,GACD,GAAIvE,GAAKkH,IAAW3C,EAAOvE,GAG3B,OAFAA,GAAGmH,QAA+B,IAArB5C,EAAOvE,GAAGc,OACvBd,EAAG4B,eAAiB2C,EACbvE,KA1VuG/C,EAAAkD,UAiW1HsC,QAjW0H,WAkWlHzD,EAAWoI,SAASpI,EAAWqI,UAlWmFpK,EAAAkD,UA0W1HD,cA1W0H,SA0W5G4C,GACV,SAAUA,EAAKwE,OAAQxE,EAAKyE,OA3W0FtK,EAAAkD,UAkX1HF,kBAlX0H,WAmXtH,MAAO3G,MAAKwE,MAAMgD,OAASxH,KAAK+E,YAnXsFpB,EAAAkD,UA2X1HqH,eA3X0H,SA2X3GtB,GACX,MAAQA,IAAU,KAAOA,EAAS,KAAmB,MAAXA,GA5X4EjJ,EAAAkD,UAqY1HsH,mBArY0H,SAqYvGxB,EAAUpI,GACzB,GAAI6J,GAAgBpO,KAAKqO,eAAe9J,EAIxC,OAHA2G,GAAQvF,EAAM2I,SAASC,kBAAmB,SAACC,GACvC7B,EAAW6B,EAAY7B,EAAUyB,KAE9BzB,GA1Y+GhJ,EAAAkD,UAmZ1H4H,cAnZ0H,SAmZ5GlK,GACV,GAAiB0H,GAAKyC,EAAKC,EAAvBC,IAEJ,OAAIrK,IAEJ2G,EAAQ3G,EAAQsK,MAAM,MAAO,SAACC,GAC1BH,EAAIG,EAAKtD,QAAQ,KACjBS,EAAM6C,EAAK1H,MAAM,EAAGuH,GAAGI,OAAOC,cAC9BN,EAAMI,EAAK1H,MAAMuH,EAAI,GAAGI,OAErB9C,IACC2C,EAAO3C,GAAO2C,EAAO3C,GAAO2C,EAAO3C,GAAO,KAAOyC,EAAMA,KAIxDE,GAZaA,GAtZkGjL,EAAAkD,UA0a1HwH,eA1a0H,SA0a3GY,GACX,MAAO,UAACtM,GACJ,MAAGA,GACQsM,EAActM,EAAKqM,gBAAkB,KAEzCC,IA/a2GtL,EAAAkD,UAub1HqI,cAvb0H,SAub5G1F,GACV,QAAS2F,GAAeC,GACpB,MAAIA,aAAgBC,MACTD,EAGPA,EAAKE,MAAQF,EAAKE,eAAgBD,MAC3BD,EAAKE,KAGT,KAVK,GAaZC,GAbYC,EAAAxP,KAYZyP,EAAMjG,EAAKkG,KAAO,GAAIC,eAiB1B,IAdKnG,EAAKrE,iBAWNoK,EAAW/F,EAAKoG,OAVhBL,EAAW,GAAIxJ,GACfmF,EAAQ1B,EAAK1E,SAAU,SAAClE,GACpBsK,EAAQtK,EAAK,SAACgC,EAAOqJ,GACjBsD,EAASM,OAAO5D,EAAKrJ,OAI7B2M,EAASM,OAAOrG,EAAKlF,MAAO6K,EAAe3F,EAAKoG,OAAQpG,EAAK4F,KAAKzM,OAMxC,gBAApB6G,GAAKoG,MAAM5B,KACjB,KAAM,IAAIzI,WAAU,wCAGxBkK,GAAItE,OAAO2E,WAAa,SAACC,GACrB,GAAItL,GAAW4I,KAAKC,MAAMyC,EAAMC,iBAAkC,IAAfD,EAAMzP,OAAeyP,EAAME,MAAQ,EACtFT,GAAKU,gBAAgB1G,EAAM/E,IAG/BgL,EAAIU,OAAS,WACT,GAAI5L,GAAUiL,EAAKf,cAAcgB,EAAIW,yBACjCzD,EAAW6C,EAAKrB,mBAAmBsB,EAAI9C,SAAUpI,GACjD8L,EAAOb,EAAKtB,eAAeuB,EAAI7C,QAAU,UAAY,QACrDhI,EAAS,MAAQyL,EAAO,MAC5Bb,GAAK5K,GAAQ4E,EAAMmD,EAAU8C,EAAI7C,OAAQrI,GACzCiL,EAAK1E,gBAAgBtB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,IAGrDkL,EAAIa,QAAU,WACV,GAAI/L,GAAUiL,EAAKf,cAAcgB,EAAIW,yBACjCzD,EAAW6C,EAAKrB,mBAAmBsB,EAAI9C,SAAUpI,EACrDiL,GAAKe,aAAa/G,EAAMmD,EAAU8C,EAAI7C,OAAQrI,GAC9CiL,EAAK1E,gBAAgBtB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,IAGrDkL,EAAIe,QAAU,WACV,GAAIjM,GAAUiL,EAAKf,cAAcgB,EAAIW,yBACjCzD,EAAW6C,EAAKrB,mBAAmBsB,EAAI9C,SAAUpI,EACrDiL,GAAK7E,cAAcnB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,GAC/CiL,EAAK1E,gBAAgBtB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,IAGrDkL,EAAIgB,KAAKjH,EAAK5E,OAAQ4E,EAAKnF,KAAK,GAEhCoL,EAAIvK,gBAAkBsE,EAAKtE,gBAE3BgG,EAAQ1B,EAAKjF,QAAS,SAAC3B,EAAOD,GAC1B8M,EAAIiB,iBAAiB/N,EAAMC,KAG/B6M,EAAIkB,KAAKpB,IA5f6G5L,EAAAkD,UAmgB1H+J,iBAngB0H,SAmgBzGpH,GAAM,GAAAqH,GAAA7Q,KACf8Q,EAAOC,EAAQ,mCACfC,EAASD,EAAQ,gCAAkCE,KAAKC,MAAQ,MAChEC,EAAQ3H,EAAK4H,MAEd5H,GAAK6H,OAAO7H,EAAK6H,MAAMC,YAAYH,GACtC3H,EAAK6H,MAAQP,EAEbK,EAAM7G,KAAK,OAAQd,EAAKlF,OAExB4G,EAAQ1B,EAAK1E,SAAU,SAAClE,GACpBsK,EAAQtK,EAAK,SAACgC,EAAOqJ,GACjB,GAAIsF,GAAWR,EAAQ,8BAAgC9E,EAAM,OAC7DsF,GAAS7C,IAAI9L,GACbkO,EAAKjB,OAAO0B,OAIpBT,EAAKxG,MACDkH,OAAQhI,EAAKnF,IACbO,OAAQ,OACR6M,OAAQT,EAAO1G,KAAK,QACpBoH,QAAS,sBACTC,SAAU,wBAGdX,EAAOpD,KAAK,OAAQ,WAChB,GAAIgE,GAAO,GACPhF,EAAS,GAEb,KAaIgF,EAAOZ,EAAO,GAAGa,gBAAgBC,KAAKC,UACxC,MAAMC,GAGJpF,EAAS,IAGb,GAAI6C,IAAO9C,SAAUiF,EAAMhF,OAAQA,EAAQpC,OAAO,GAC9CjG,KACAoI,EAAWkE,EAAK1C,mBAAmBsB,EAAI9C,SAAUpI,EAErDsM,GAAKoB,eAAezI,EAAMmD,EAAU8C,EAAI7C,OAAQrI,GAChDsM,EAAK/F,gBAAgBtB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,KAGrDuM,EAAKvG,MAAQ,WACT,GAEIoC,GAFA8C,GAAO7C,OAAQ,EAAGpC,OAAO,GACzBjG,IAGJyM,GAAOkB,OAAO,QAAQ5H,KAAK,MAAO,qBAClCwG,EAAKQ,YAAYH,GAEjBN,EAAKlG,cAAcnB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,GAC/CsM,EAAK/F,gBAAgBtB,EAAMmD,EAAU8C,EAAI7C,OAAQrI,IAGrD4M,EAAMgB,MAAMrB,GACZA,EAAKjB,OAAOsB,GAAOtB,OAAOmB,GAE1BF,EAAK,GAAGsB,UA5kB8GzO,EAAAkD,UAqlB1H8B,wBArlB0H,SAqlBlGa,EAAMyB,EAAQpI,GAClC7C,KAAKsM,uBAAuB9C,EAAMyB,EAAQpI,IAtlB4Ec,EAAAkD,UA4lB1HkC,mBA5lB0H,SA4lBvGS,GACfxJ,KAAKqM,kBAAkB7C,IA7lB+F7F,EAAAkD,UAmmB1HoC,kBAnmB0H,SAmmBxG8B,GACd/K,KAAKmM,iBAAiBpB,IApmBgGpH,EAAAkD,UA2mB1HqD,oBA3mB0H,SA2mBtGV,GAChBA,EAAK6I,kBACLrS,KAAKuM,mBAAmB/C,IA7mB8F7F,EAAAkD,UAqnB1HqJ,gBArnB0H,SAqnB1G1G,EAAM/E,GAClB,GAAIwL,GAAQjQ,KAAKkJ,kBAAkBzE,EACnCzE,MAAKyE,SAAWwL,EAChBzG,EAAK8I,YAAY7N,GACjBzE,KAAKwM,eAAehD,EAAM/E,GAC1BzE,KAAKyM,cAAcwD,GACnBjQ,KAAKmJ,WA3nBiHxF,EAAAkD,UAqoB1HoL,eAroB0H,SAqoB3GzI,EAAMmD,EAAUC,EAAQrI,GACnCiF,EAAK+I,WAAW5F,EAAUC,EAAQrI,GAClCvE,KAAK0M,cAAclD,EAAMmD,EAAUC,EAAQrI,IAvoB2EZ,EAAAkD,UAipB1H0J,aAjpB0H,SAipB7G/G,EAAMmD,EAAUC,EAAQrI,GACjCiF,EAAKgJ,SAAS7F,EAAUC,EAAQrI,GAChCvE,KAAK6M,YAAYrD,EAAMmD,EAAUC,EAAQrI,IAnpB6EZ,EAAAkD,UA6pB1H8D,cA7pB0H,SA6pB5GnB,EAAMmD,EAAUC,EAAQrI,GAClCiF,EAAKiJ,UAAU9F,EAAUC,EAAQrI,GACjCvE,KAAK8M,aAAatD,EAAMmD,EAAUC,EAAQrI,IA/pB4EZ,EAAAkD,UAyqB1HiE,gBAzqB0H,SAyqB1GtB,EAAMmD,EAAUC,EAAQrI,GACpCiF,EAAKkJ,YAAY/F,EAAUC,EAAQrI,GACnCvE,KAAK+M,eAAevD,EAAMmD,EAAUC,EAAQrI,EAE5C,IAAIoO,GAAW3S,KAAK0L,gBAAgB,EAGpC,OAFA1L,MAAKmG,aAAc,EAEhByM,EAAUD,OACTA,GAASxH,UAIbnL,KAAKgN,gBACLhN,KAAKyE,SAAWzE,KAAKkJ,wBACrBlJ,MAAKmJ,YAvrBiHxF,EAksBnHqE,OAlsBmH,SAksB5GpF,GACV,MAAQkD,IAAQlD,YAAiBkD,IAnsBqFnC,EA2sBnH2H,iBA3sBmH,SA2sBlG1I,GACpB,MAAOA,aAAiBgB,IA5sB8FD,EAmtBnHuD,kBAntBmH,SAmtBjGtE,GACrB,MAAQiQ,GAASjQ,IAAU,UAAYA,IAptB+Ee,EA2tBnHmP,QA3tBmH,SA2tB3GrB,EAAQsB,GACnBtB,EAAO5K,UAAY1C,OAAO6O,OAAOD,EAAOlM,WACxC4K,EAAO5K,UAAUwE,YAAcoG,EAC/BA,EAAOwB,OAASF,GA9tBsGpP,IAqvB9H,OAVAA,GAAakD,UAAUmD,WAAalE,IAAQC,GAO5CpC,EAAaqG,QAAUrG,EAAakD,UAAUmD,QAGvCrG,ELzmBVQ,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,GAGX,IAAI6F,GAAiB,WAAc,QAASyK,GAAcC,EAAKxE,GAAK,GAAIyE,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK9I,MAAW,KAAM,IAAK,GAAiC+I,GAA7BC,EAAKN,EAAIO,OAAOC,cAAmBN,GAAMG,EAAKC,EAAG/L,QAAQI,QAAoBsL,EAAKtK,KAAK0K,EAAG5Q,QAAY+L,GAAKyE,EAAK5L,SAAWmH,GAA3D0E,GAAK,IAAoE,MAAOhL,GAAOiL,GAAK,EAAMC,EAAKlL,EAAO,QAAU,KAAWgL,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAKxE,GAAK,GAAIxH,MAAMoG,QAAQ4F,GAAQ,MAAOA,EAAY,IAAIO,OAAOC,WAAYxP,QAAOgP,GAAQ,MAAOD,GAAcC,EAAKxE,EAAa,MAAM,IAAIpJ,WAAU,2DAEtlB3F,GAAQkB,QKlJe0E,CAjBxB,IAAAzE,GAAAb,EAAA,GL6KK0T,GANWjT,EAAuBI,GKzJ/B0B,SAVJmL,EL0KQgG,EK1KRhG,KACA3H,EL0KQ2N,EK1KR3N,KACAC,EL0KU0N,EK1KV1N,OACAgF,EL0KW0I,EK1KX1I,QACA2H,EL0KYe,EK1KZf,SACAtH,EL0KYqI,EK1KZrI,SACAqH,EL0KagB,EK1KbhB,UACArF,EL0KWqG,EK1KXrG,QACA1F,EL0Ke+L,EK1Kf/L,YACAkJ,EL0KW6C,EK1KX7C,OA6vBJvL,GAAWqO,SACP,sBACA,aACA,QACA,UACA,WACA,iBACA,WACA,aLsRE,SAAUhU,EAAQD,EAASM,GM3iCjC,YNwjCC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCM7iClG,QAASC,KAGpB,kBAMI,QAAA5B,GAAYkQ,GAAa1O,EAAApF,KAAA4D,EACrB,IAAImQ,GAAUC,EAAUF,GACpBG,EAAmBF,EAAUD,EAAYlR,MAAQkR,EACjDI,EAAUC,EAASF,GAAoB,WAAa,SACpDrP,EAAS,cAAgBsP,CAC7BlU,MAAK4E,GAAQqP,GAXrB,MAAArQ,GAAAiD,UAkBIuN,oBAlBJ,SAkBwBC,GAChBrU,KAAKsU,iBAAmB,KACxBtU,KAAKgO,KAAO,KACZhO,KAAKiO,KAAO,QAAUoG,EAAKjN,MAAMiN,EAAKE,YAAY,KAAO,GAAGvF,cAC5DhP,KAAK2C,KAAO0R,EAAKjN,MAAMiN,EAAKE,YAAY,KAAOF,EAAKE,YAAY,MAAQ,IAtBhF3Q,EAAAiD,UA6BI2N,kBA7BJ,SA6BsBtI,GACdlM,KAAKsU,iBAAmBrO,EAAKiG,EAAOoI,kBACpCtU,KAAKgO,KAAO9B,EAAO8B,KACnBhO,KAAKiO,KAAO/B,EAAO+B,KACnBjO,KAAK2C,KAAOuJ,EAAOvJ,KAEnB3C,KAAKsP,KAAOpD,GAnCpBtI,KN+hCHO,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QMriCe0E,CAVxB,IAAAzE,GAAAb,EAAA,GNyjCK0T,GANWjT,EAAuBI,GM5iC/B0B,SAHJwD,ENsjCQ2N,EMtjCR3N,KACA+N,ENsjCaJ,EMtjCbI,UACAG,ENsjCYP,EMtjCZO,UN2mCE,SAAUtU,EAAQD,EAASM,GOpnCjC,YPioCC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCOrnClG,QAASC,GAAWiP,EAAU7Q,GAGzC,kBAQI,QAAAC,GAAY6Q,EAAUC,EAAM9R,GAASuC,EAAApF,KAAA6D,EACjC,IAAIkQ,GAAUC,EAAUW,GACpBxD,EAAQ4C,EAAUhD,EAAQ4D,GAAQ,KAClCvF,EAAQ2E,EAAiB,KAAPY,CAEtBzO,GAAOlG,MACHqE,IAAKqQ,EAASrQ,IACdC,MAAOoQ,EAASpQ,MAChBC,QAAS0B,EAAKyO,EAASnQ,SACvBO,SAAUmB,EAAKyO,EAAS5P,UACxBH,kBAAmB+P,EAAS/P,kBAC5BO,gBAAiBwP,EAASxP,gBAC1BC,iBAAkBuP,EAASvP,iBAC3BP,OAAQ8P,EAAS9P,QAClB/B,GACC6R,SAAUA,EACVtF,KAAM,GAAIxL,GAAe+Q,GACzBhJ,SAAS,EACTxF,aAAa,EACbsF,YAAY,EACZmJ,WAAW,EACXzK,UAAU,EACV0K,SAAS,EACTpQ,SAAU,EACV6E,MAAO,KACPsG,MAAOR,EACPgC,OAAQD,IAGRA,GAAOnR,KAAK8U,aAAa3D,GArCrC,MAAAtN,GAAAgD,UA6CIsE,OA7CJ,WA8CQ,IACInL,KAAK0U,SAAS5K,WAAW9J,MAC3B,MAAMgS,GACJ,GAAI+C,GAAU/C,EAAErP,KAAO,IAAMqP,EAAE+C,OAC/B/U,MAAK0U,SAAS5J,gBAAgB9K,KAAM+U,EAAS/C,EAAEgD,SAC/ChV,KAAK0U,SAASnE,aAAavQ,KAAM+U,EAAS/C,EAAEgD,WAnDxDnR,EAAAgD,UAyDI4C,OAzDJ,WA0DQzJ,KAAK0U,SAAStK,WAAWpK,OA1DjC6D,EAAAgD,UA+DIgD,OA/DJ,WAgEQ7J,KAAK0U,SAASrL,gBAAgBrJ,OAhEtC6D,EAAAgD,UAsEIoO,eAtEJ,aAAApR,EAAAgD,UA6EIqO,WA7EJ,SA6EezQ,KA7EfZ,EAAAgD,UAqFIsO,UArFJ,SAqFcxI,EAAUC,EAAQrI,KArFhCV,EAAAgD,UA6FIuO,QA7FJ,SA6FYzI,EAAUC,EAAQrI,KA7F9BV,EAAAgD,UAqGIwO,SArGJ,SAqGa1I,EAAUC,EAAQrI,KArG/BV,EAAAgD,UA6GIyO,WA7GJ,SA6Ge3I,EAAUC,EAAQrI,KA7GjCV,EAAAgD,UAqHIwL,gBArHJ,WAsHQrS,KAAK2L,SAAU,EACf3L,KAAKmG,aAAc,EACnBnG,KAAKyL,YAAa,EAClBzL,KAAK4U,WAAY,EACjB5U,KAAKmK,UAAW,EAChBnK,KAAK6U,SAAU,EACf7U,KAAKyE,SAAW,EAChBzE,KAAKiV,kBA7HbpR,EAAAgD,UAoIIyL,YApIJ,SAoIgB7N,GACRzE,KAAKyE,SAAWA,EAChBzE,KAAKkV,WAAWzQ,IAtIxBZ,EAAAgD,UA+II0L,WA/IJ,SA+Ie5F,EAAUC,EAAQrI,GACzBvE,KAAK2L,SAAU,EACf3L,KAAKmG,aAAc,EACnBnG,KAAKyL,YAAa,EAClBzL,KAAK4U,WAAY,EACjB5U,KAAKmK,UAAW,EAChBnK,KAAK6U,SAAU,EACf7U,KAAKyE,SAAW,IAChBzE,KAAKsJ,MAAQ,KACbtJ,KAAKmV,UAAUxI,EAAUC,EAAQrI,IAxJzCV,EAAAgD,UAiKI2L,SAjKJ,SAiKa7F,EAAUC,EAAQrI,GACvBvE,KAAK2L,SAAU,EACf3L,KAAKmG,aAAc,EACnBnG,KAAKyL,YAAa,EAClBzL,KAAK4U,WAAY,EACjB5U,KAAKmK,UAAW,EAChBnK,KAAK6U,SAAU,EACf7U,KAAKyE,SAAW,EAChBzE,KAAKsJ,MAAQ,KACbtJ,KAAKoV,QAAQzI,EAAUC,EAAQrI,IA1KvCV,EAAAgD,UAmLI4L,UAnLJ,SAmLc9F,EAAUC,EAAQrI,GACxBvE,KAAK2L,SAAU,EACf3L,KAAKmG,aAAc,EACnBnG,KAAKyL,YAAa,EAClBzL,KAAK4U,WAAY,EACjB5U,KAAKmK,UAAW,EAChBnK,KAAK6U,SAAU,EACf7U,KAAKyE,SAAW,EAChBzE,KAAKsJ,MAAQ,KACbtJ,KAAKqV,SAAS1I,EAAUC,EAAQrI,IA5LxCV,EAAAgD,UAqMI6L,YArMJ,SAqMgB/F,EAAUC,EAAQrI,GAC1BvE,KAAKsV,WAAW3I,EAAUC,EAAQrI,GAC/BvE,KAAK2E,mBAAmB3E,KAAK6J,UAvMxChG,EAAAgD,UA4MI8C,SA5MJ,WA6MW3J,KAAKoR,QAAQpR,KAAKoR,OAAOvH,SACzB7J,KAAKqR,OAAOrR,KAAKqR,MAAMxH,eACnB7J,MAAKqR,YACLrR,MAAKoR,QAhNpBvN,EAAAgD,UAsNIoD,oBAtNJ,WAuNQjK,KAAKsJ,MAAQtJ,KAAKsJ,SAAWtJ,KAAK0U,SAAStO,WAC3CpG,KAAK2L,SAAU,GAxNvB9H,EAAAgD,UA+NIiO,aA/NJ,SA+NiB3D,GACT,GAAIoE,GAAQd,EAAStD,EAAMoE,SAASpE,EAAMqE,QAC1CD,GAAMjL,KAAK,QAAS,MACpB6G,EAAMsE,IAAI,UAAW,QACrBtE,EAAMgB,MAAMoD,IAnOpB1R,KPumCHM,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QO7mCe0E,CAXxB,IAAAzE,GAAAb,EAAA,GPkoCK0T,GANWjT,EAAuBI,GOpnC/B0B,SAJJwD,EP+nCQ2N,EO/nCR3N,KACAC,EP+nCU0N,EO/nCV1N,OACA6K,EP+nCW6C,EO/nCX7C,QACAiD,EP+nCaJ,EO/nCbI,SAgPJxO,GAAWqO,SACP,WACA,mBP8pCE,SAAUhU,EAAQD,EAASM,GQ15CjC,YRu6CC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCQ95ClG,QAASC,KAAa,GAG3B1B,GAH2B,WAa7B,QAAAA,GAAYjB,GAASuC,EAAApF,KAAA8D,GACjBoC,EAAOlG,KAAM6C,GACb7C,KAAK0U,SAASrO,YAAYrG,KAAKsK,MAAMxB,KAAK9I,MAC1CA,KAAK0V,aACL1V,KAAK4N,OAjBoB,MAAA9J,GAAA+C,UAsB7B+G,KAtB6B,WAuBzB,IAAI,GAAI3B,KAAOjM,MAAK2V,OAAQ,CACxB,GAAIrL,GAAOtK,KAAK2V,OAAO1J,EACvBjM,MAAK+Q,QAAQnD,KAAK3B,EAAKjM,KAAKsK,MAzBPxG,EAAA+C,UA+B7BqL,OA/B6B,WAgCzB,IAAI,GAAIjG,KAAOjM,MAAK2V,OAChB3V,KAAK+Q,QAAQmB,OAAOjG,EAAKjM,KAAK2V,OAAO1J,KAjChBnI,EAAA+C,UAuC7BkF,QAvC6B,WAwCzB,GAAIzC,GAAQtJ,KAAK0U,SAASrO,YAAYrG,KAAKsK,MAAMkB,QAAQxL,KACzDA,MAAK0U,SAASrO,YAAYrG,KAAKsK,MAAMZ,OAAOJ,EAAO,GACnDtJ,KAAKkS,UA1CoBpO,EAAA+C,UAiD7B6O,WAjD6B,WAkDzB,IAAI,GAAIzJ,KAAOjM,MAAK2V,OAAQ,CACxB,GAAIrL,GAAOtK,KAAK2V,OAAO1J,EACvBjM,MAAKsK,GAAQtK,KAAKsK,GAAMsD,KAAK5N,QApDR8D,IAiEjC,OAHAA,GAAc+C,UAAU8O,UAGjB7R,ERk1CVK,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QQt5Ce0E,CARxB,IAAAzE,GAAAb,EAAA,GRw6CK0T,GANWjT,EAAuBI,GQ75C/B0B,SADJyD,ERq6CU0N,EQr6CV1N,QRs/CE,SAAUrG,EAAQD,EAASM,GS7/CjC,YT0gDC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASqQ,GAA2BC,EAAMtV,GAAQ,IAAKsV,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOvV,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BsV,EAAPtV,EAElO,QAASwV,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1Q,WAAU,iEAAoE0Q,GAAeD,GAASnP,UAAY1C,OAAO6O,OAAOiD,GAAcA,EAAWpP,WAAawE,aAAezI,MAAOoT,EAAUE,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeH,IAAY9R,OAAOkS,eAAiBlS,OAAOkS,eAAeL,EAAUC,GAAcD,EAASM,UAAYL,GSrgDnd,QAASzQ,GAAWiP,EAAU3Q,GAGzC,gBAAArC,GAMI,QAAAsC,GAAYlB,GAASuC,EAAApF,KAAA+D,EACjB,IAAIwS,GAAkBrQ,EAAOrD,GAEzB8S,QACIa,SAAU,UACVC,OAAQ,YAGZnM,KAAM,WAROtD,EAAA4O,EAAA5V,KAWjByB,EAAAlB,KAAAP,KAAMuW,GAXW,OAabvP,GAAK0N,SAAS1K,SACdhD,EAAK+J,QAAQ2F,WAAW,YAE5B1P,EAAK+J,QAAQzG,KAAK,QAAS,MAhBVtD,EANzB,MAAA+O,GAAAhS,EAAAtC,GAAAsC,EAAA8C,UA4BI8P,WA5BJ,aAAA5S,EAAA8C,UAkCI+P,WAlCJ,aAAA7S,EAAA8C,UAwCIgQ,sBAxCJ,WAyCQ,QAAS7W,KAAK+Q,QAAQ+F,KAAK,aAzCnC/S,EAAA8C,UA8CIkQ,SA9CJ,WA+CQ,GAAIhQ,GAAQ/G,KAAK0U,SAAS1K,QAAUhK,KAAK+Q,QAAQ,GAAGhK,MAAQ/G,KAAK+Q,QAAQ,GACrElO,EAAU7C,KAAK2W,aACf9R,EAAU7E,KAAK4W,YAEf5W,MAAK0U,SAAS1K,SAAShK,KAAK+L,UAChC/L,KAAK0U,SAAS5N,WAAWC,EAAOlE,EAASgC,GACtC7E,KAAK6W,0BACJ7W,KAAK+Q,QAAQzG,KAAK,QAAS,MAC3BtK,KAAK+Q,QAAQO,YAAYmD,EAASzU,KAAK+Q,QAAQwE,SAASvV,KAAKwV,UAvDzEzR,GAAgCD,GTm/CnCK,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QSz/Ce0E,CARxB,IAAAzE,GAAAb,EAAA,GT+gDK0T,GAVWjT,EAAuBI,GShgD/B0B,SADJyD,ET4gDU0N,ES5gDV1N,MAqEJV,GAAWqO,SACP,WACA,kBTshDE,SAAUhU,EAAQD,GUpmDxB,YV6mDC,SAASoX,GAAmB7D,GAAO,GAAIhM,MAAMoG,QAAQ4F,GAAM,CAAE,IAAK,GAAIxE,GAAI,EAAGsI,EAAO9P,MAAMgM,EAAI3L,QAASmH,EAAIwE,EAAI3L,OAAQmH,IAAOsI,EAAKtI,GAAKwE,EAAIxE,EAAM,OAAOsI,GAAe,MAAO9P,OAAM+P,KAAK/D,GAE1L,QAAS/N,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCUtmDlG,QAASC,GAAW2R,GAGjC,kBAIE,QAAAjT,KAAwB,GAAZ+D,GAAYmP,UAAA5P,OAAA,GAAAiD,SAAA2M,UAAA,GAAAA,UAAA,KAAAhS,GAAApF,KAAAkE,GACtBlE,KAAKiI,MAAQA,EALjB,MAAA/D,GAAA2C,UAOEa,KAPF,SAOOgB,GACH,GAAIH,GAAOvI,KAAKiI,MAAML,OACtB,IAAIC,EAAYU,GAEd,WADAvI,MAAK4I,aAALgC,MAAA5K,KAAAgX,EAAqBtO,GAGvB,IAAIL,GAAM,GAAIgP,OAAM,4BAGpB,IAFAhP,EAAIE,KAAOA,EACXF,EAAIK,KAAOA,EACPH,EAAKsF,QAAS,CAChB,GAAIyJ,GAAWH,EAAGI,QACdC,EAAc5J,EAAK5N,KAAMA,KAAK0H,KAAMgB,GACpC+O,EAAa7J,EAAK5N,KAAMA,KAAKoI,SAAUC,EAC3CiP,GAASI,QAAQC,KAAKH,EAAaC,GACnClP,iBAAQG,GAARmC,QAAcyM,SACT,CACL,GAAIM,GAASC,QAAQtP,iBAAQG,IACzBkP,GACF5X,KAAK0H,KAAKgB,GAEV1I,KAAKoI,SAASC,KA3BtBnE,EAAA2C,UA+BEmC,KA/BF,WA+BgB,OAAA8O,GAAAV,UAAA5P,OAANkB,EAAMvB,MAAA2Q,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrP,EAAMqP,GAAAX,UAAAW,EACZ/X,MAAK0H,KAAKgB,IAhCdxE,EAAA2C,UAkCEuB,SAlCF,SAkCWC,KAlCXnE,EAAA2C,UAqCE+B,aArCF,aAAA1E,KV4lDDC,OAAOC,eAAexE,EAAS,cAC7BgD,OAAO,IAEThD,EAAQkB,QUlmDe0E,CVwmDvB,IAAIoO,GU3mDDnR,QAFFmL,EV8mDUgG,EU9mDVhG,KACA/F,EV8mDiB+L,EU9mDjB/L,WAmDFrC,GAAWqO,SACT,OVsnDI,SAAUhU,EAAQD,EAASM,GW/qDjC,YX4rDC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASqQ,GAA2BC,EAAMtV,GAAQ,IAAKsV,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOvV,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BsV,EAAPtV,EAElO,QAASwV,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1Q,WAAU,iEAAoE0Q,GAAeD,GAASnP,UAAY1C,OAAO6O,OAAOiD,GAAcA,EAAWpP,WAAawE,aAAezI,MAAOoT,EAAUE,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeH,IAAY9R,OAAOkS,eAAiBlS,OAAOkS,eAAeL,EAAUC,GAAcD,EAASM,UAAYL,GWtrDnd,QAASzQ,GAAW1B,GAG/B,gBAAArC,GAMI,QAAAuC,GAAYnB,GAASuC,EAAApF,KAAAgE,EACjB,IAAIuS,GAAkBrQ,EAAOrD,GAEzB8S,QACIa,SAAU,UACVjQ,KAAM,SACNyR,SAAU,aACVC,UAAW,eAGf3N,KAAM,QAVO,OAAAsL,GAAA5V,KAajByB,EAAAlB,KAAAP,KAAMuW,IAnBd,MAAAR,GAAA/R,EAAAvC,GAAAuC,EAAA6C,UAyBI8P,WAzBJ,aAAA3S,EAAA6C,UA+BI+P,WA/BJ,aAAA5S,EAAA6C,UAoCIqR,OApCJ,SAoCWnI,GACH,GAAIoI,GAAWnY,KAAKoY,aAAarI,EACjC,IAAIoI,EAAJ,CACA,GAAItV,GAAU7C,KAAK2W,aACf9R,EAAU7E,KAAK4W,YACnB5W,MAAKqY,gBAAgBtI,GACrB7E,EAAQlL,KAAK0U,SAASrO,YAAYG,KAAMxG,KAAKsY,iBAAkBtY,MAC/DA,KAAK0U,SAAS5N,WAAWqR,EAASpR,MAAOlE,EAASgC,KA3C1Db,EAAA6C,UAgDI0R,WAhDJ,SAgDexI,GACP,GAAIoI,GAAWnY,KAAKoY,aAAarI,EAC7B/P,MAAKwY,WAAWL,EAASM,SAC7BN,EAASO,WAAa,OACtB1Y,KAAKqY,gBAAgBtI,GACrB7E,EAAQlL,KAAK0U,SAASrO,YAAYG,KAAMxG,KAAK2Y,cAAe3Y,QArDpEgE,EAAA6C,UA0DI+R,YA1DJ,SA0DgB7I,GACLA,EAAM8I,gBAAkB7Y,KAAK+Q,QAAQ,KACxC/Q,KAAKqY,gBAAgBtI,GACrB7E,EAAQlL,KAAK0U,SAASrO,YAAYG,KAAMxG,KAAKsY,iBAAkBtY,QA7DvEgE,EAAA6C,UAkEIuR,aAlEJ,SAkEiBrI,GACT,MAAOA,GAAM+I,aAAe/I,EAAM+I,aAAe/I,EAAMgJ,cAAcD,cAnE7E9U,EAAA6C,UAwEIwR,gBAxEJ,SAwEoBtI,GACZA,EAAMiJ,iBACNjJ,EAAMkJ,mBA1EdjV,EAAA6C,UAgFI2R,WAhFJ,SAgFeC,GACP,QAAIA,IACDA,EAAMjN,QACEiN,EAAMjN,QAAQ,YAAa,IAC5BiN,EAAMS,UACLT,EAAMS,SAAS,WArFlClV,EAAA6C,UA6FI8R,cA7FJ,SA6FkBnP,GACVA,EAAK2P,gBA9FbnV,EAAA6C,UAmGIyR,iBAnGJ,SAmGqB9O,GACbA,EAAK4P,mBApGbpV,GAA8BF,GXoqDjCK,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QW1qDe0E,CATxB,IAAAzE,GAAAb,EAAA,GXisDK0T,GAVWjT,EAAuBI,GWjrD/B0B,SAFJyD,EX8rDU0N,EW9rDV1N,OACAgF,EX8rDW0I,EW9rDX1I,OAiHJ1F,GAAWqO,SACP,kBXotDE,SAAUhU,EAAQD,EAASM,GY90DjC,YZ21DC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASwE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASqQ,GAA2BC,EAAMtV,GAAQ,IAAKsV,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOvV,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BsV,EAAPtV,EAElO,QAASwV,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI1Q,WAAU,iEAAoE0Q,GAAeD,GAASnP,UAAY1C,OAAO6O,OAAOiD,GAAcA,EAAWpP,WAAawE,aAAezI,MAAOoT,EAAUE,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeH,IAAY9R,OAAOkS,eAAiBlS,OAAOkS,eAAeL,EAAUC,GAAcD,EAASM,UAAYL,GYt1Dnd,QAASzQ,GAAW1B,GAG/B,gBAAArC,GAMI,QAAAwC,GAAYpB,GAASuC,EAAApF,KAAAiE,EACjB,IAAIsS,GAAkBrQ,EAAOrD,GAEzB8S,QACIa,SAAU,WAGdlM,KAAM,OAEN+O,UAAW,gBATE,OAAAzD,GAAA5V,KAYjByB,EAAAlB,KAAAP,KAAMuW,IAlBd,MAAAR,GAAA9R,EAAAxC,GAAAwC,EAAA4C,UAuBIsS,aAvBJ,WAwBQnZ,KAAK+Q,QAAQuI,SAAStZ,KAAKuZ,iBAxBnCtV,EAAA4C,UA6BIuS,gBA7BJ,WA8BQpZ,KAAK+Q,QAAQyI,YAAYxZ,KAAKuZ,iBA9BtCtV,EAAA4C,UAoCI0S,aApCJ,WAqCQ,MAAOvZ,MAAKqZ,WArCpBpV,GAA8BH,GZo0DjCK,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,QY10De0E,CARxB,IAAAzE,GAAAb,EAAA,GZg2DK0T,GAVWjT,EAAuBI,GYj1D/B0B,SADJyD,EZ61DU0N,EY71DV1N,MAkDJV,GAAWqO,SACP,kBZu2DE,SAAUhU,EAAQD,EAASM,Gaj6DjC,Yb86DC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,Gax6DzE,QAAS4E,GAAWiU,EAAQ9V,EAAcI,GAGrD,OACI2V,KAAM,SAAClE,EAAOzE,EAAS4I,GACnB,GAAIjF,GAAWc,EAAMoE,MAAMD,EAAWjF,SAEtC,MAAMA,YAAoB/Q,IACtB,KAAM,IAAI4B,WAAU,iDAGxB,IAAI2G,GAAS,GAAInI,IACb2Q,SAAUA,EACV3D,QAASA,EACTyE,MAAOA,GAGXtJ,GAAOyK,WAAa8C,EAAOE,EAAW9W,SAAS+K,KAAK1B,EAAQsJ,GAC5DtJ,EAAO0K,WAAa,iBAAM+C,GAAW9U,Wb64DhDV,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,Qal6De0E,CAHxB,IAAAzE,GAAAb,EAAA,Eby6DgBS,GAAuBI,Ea54DvCyE,GAAWqO,SACP,SACA,eACA,eby6DE,SAAUhU,EAAQD,EAASM,Gc58DjC,Ydy9DC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,Gcn9DzE,QAAS4E,GAAWiU,EAAQ9V,EAAcK,GAGrD,OACI0V,KAAM,SAAClE,EAAOzE,EAAS4I,GACnB,GAAIjF,GAAWc,EAAMoE,MAAMD,EAAWjF,SAEtC,MAAMA,YAAoB/Q,IACtB,KAAM,IAAI4B,WAAU,iDAGxB,IAAKmP,EAAS1K,QAAd,CAEA,GAAIkC,GAAS,GAAIlI,IACb0Q,SAAUA,EACV3D,QAASA,GAGb7E,GAAOyK,WAAa8C,EAAOE,EAAW9W,SAAS+K,KAAK1B,EAAQsJ,GAC5DtJ,EAAO0K,WAAa,iBAAM+C,GAAW9U,Ydu7DhDV,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,Qc78De0E,CAHxB,IAAAzE,GAAAb,EAAA,Edo9DgBS,GAAuBI,Ect7DvCyE,GAAWqO,SACP,SACA,eACA,ado9DE,SAAUhU,EAAQD,EAASM,Gex/DjC,YfqgEC,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,Ge//DzE,QAAS4E,GAAW7B,EAAcM,GAG7C,OACIyV,KAAM,SAAClE,EAAOzE,EAAS4I,GACnB,GAAIjF,GAAWc,EAAMoE,MAAMD,EAAWjF,SAEtC,MAAMA,YAAoB/Q,IACtB,KAAM,IAAI4B,WAAU,iDAGxB,IAAI2G,GAAS,GAAIjI,IACbyQ,SAAUA,EACV3D,QAASA,GAGb7E,GAAOqN,aAAe,iBAAMI,GAAWN,WAAanN,EAAOmN,afs+DtElV,OAAOC,eAAexE,EAAS,cAC3BgD,OAAO,IAEXhD,EAAQkB,Qez/De0E,CAHxB,IAAAzE,GAAAb,EAAA,EfggEgBS,GAAuBI,Eer+DvCyE,GAAWqO,SACP,eACA","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _Pipeline = __webpack_require__(8);\n\t\n\tvar _Pipeline2 = _interopRequireDefault(_Pipeline);\n\t\n\tvar _FileDrop = __webpack_require__(9);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(10);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(11);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(12);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(13);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).factory('Pipeline', _Pipeline2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', 'Pipeline', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver, Pipeline) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t    FileUploader.Pipeline = Pipeline;\n\t}]);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"name\":\"angularFileUpload\"}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    bind = _angular.bind,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach,\n\t    isObject = _angular.isObject,\n\t    isNumber = _angular.isNumber,\n\t    isDefined = _angular.isDefined,\n\t    isArray = _angular.isArray,\n\t    isUndefined = _angular.isUndefined,\n\t    element = _angular.element;\n\tfunction __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem, Pipeline) {\n\t    var File = $window.File,\n\t        FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        FileUploader.prototype.addToQueue = function addToQueue(files, options, filters) {\n\t            var _this = this;\n\t\n\t            var incomingQueue = this.isArrayLikeObject(files) ? Array.prototype.slice.call(files) : [files];\n\t            var arrayOfFilters = this._getFilters(filters);\n\t            var count = this.queue.length;\n\t            var addedFileItems = [];\n\t\n\t            var next = function next() {\n\t                var something = incomingQueue.shift();\n\t\n\t                if (isUndefined(something)) {\n\t                    return done();\n\t                }\n\t\n\t                var fileLikeObject = _this.isFile(something) ? something : new FileLikeObject(something);\n\t                var pipes = _this._convertFiltersToPipes(arrayOfFilters);\n\t                var pipeline = new Pipeline(pipes);\n\t                var onThrown = function onThrown(err) {\n\t                    var originalFilter = err.pipe.originalFilter;\n\t\n\t                    var _err$args = _slicedToArray(err.args, 2),\n\t                        fileLikeObject = _err$args[0],\n\t                        options = _err$args[1];\n\t\n\t                    _this._onWhenAddingFileFailed(fileLikeObject, originalFilter, options);\n\t                    next();\n\t                };\n\t                var onSuccessful = function onSuccessful(fileLikeObject, options) {\n\t                    var fileItem = new FileItem(_this, fileLikeObject, options);\n\t                    addedFileItems.push(fileItem);\n\t                    _this.queue.push(fileItem);\n\t                    _this._onAfterAddingFile(fileItem);\n\t                    next();\n\t                };\n\t                pipeline.onThrown = onThrown;\n\t                pipeline.onSuccessful = onSuccessful;\n\t                pipeline.exec(fileLikeObject, options);\n\t            };\n\t\n\t            var done = function done() {\n\t                if (_this.queue.length !== count) {\n\t                    _this._onAfterAddingAll(addedFileItems);\n\t                    _this.progress = _this._getTotalProgress();\n\t                }\n\t\n\t                _this._render();\n\t                if (_this.autoUpload) _this.uploadAll();\n\t            };\n\t\n\t            next();\n\t        };\n\t        /**\n\t         * Remove items from the queue. Remove last: index = -1\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.removeFromQueue = function removeFromQueue(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            if (item.isUploading) item.cancel();\n\t            this.queue.splice(index, 1);\n\t            item._destroy();\n\t            this.progress = this._getTotalProgress();\n\t        };\n\t        /**\n\t         * Clears the queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.clearQueue = function clearQueue() {\n\t            while (this.queue.length) {\n\t                this.queue[0].remove();\n\t            }\n\t            this.progress = 0;\n\t        };\n\t        /**\n\t         * Uploads a item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadItem = function uploadItem(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t            item._prepareToUploading();\n\t            if (this.isUploading) return;\n\t\n\t            this._onBeforeUploadItem(item);\n\t            if (item.isCancel) return;\n\t\n\t            item.isUploading = true;\n\t            this.isUploading = true;\n\t            this[transport](item);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Cancels uploading of item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelItem = function cancelItem(value) {\n\t            var _this2 = this;\n\t\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var prop = this.isHTML5 ? '_xhr' : '_form';\n\t            if (!item) return;\n\t            item.isCancel = true;\n\t            if (item.isUploading) {\n\t                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n\t                item[prop].abort();\n\t            } else {\n\t                var dummy = [undefined, 0, {}];\n\t                var onNextTick = function onNextTick() {\n\t                    _this2._onCancelItem.apply(_this2, [item].concat(dummy));\n\t                    _this2._onCompleteItem.apply(_this2, [item].concat(dummy));\n\t                };\n\t                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n\t            }\n\t        };\n\t        /**\n\t         * Uploads all not uploaded items of queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadAll = function uploadAll() {\n\t            var items = this.getNotUploadedItems().filter(function (item) {\n\t                return !item.isUploading;\n\t            });\n\t            if (!items.length) return;\n\t\n\t            forEach(items, function (item) {\n\t                return item._prepareToUploading();\n\t            });\n\t            items[0].upload();\n\t        };\n\t        /**\n\t         * Cancels all uploads\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelAll = function cancelAll() {\n\t            var items = this.getNotUploadedItems();\n\t            forEach(items, function (item) {\n\t                return item.cancel();\n\t            });\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFile = function isFile(value) {\n\t            return this.constructor.isFile(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFileLikeObject = function isFileLikeObject(value) {\n\t            return this.constructor.isFileLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return this.constructor.isArrayLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns a index of item from the queue\n\t         * @param {Item|Number} value\n\t         * @returns {Number}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getIndexOfItem = function getIndexOfItem(value) {\n\t            return isNumber(value) ? value : this.queue.indexOf(value);\n\t        };\n\t        /**\n\t         * Returns not uploaded items\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getNotUploadedItems = function getNotUploadedItems() {\n\t            return this.queue.filter(function (item) {\n\t                return !item.isUploaded;\n\t            });\n\t        };\n\t        /**\n\t         * Returns items ready for upload\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getReadyItems = function getReadyItems() {\n\t            return this.queue.filter(function (item) {\n\t                return item.isReady && !item.isUploading;\n\t            }).sort(function (item1, item2) {\n\t                return item1.index - item2.index;\n\t            });\n\t        };\n\t        /**\n\t         * Destroys instance of FileUploader\n\t         */\n\t\n\t\n\t        FileUploader.prototype.destroy = function destroy() {\n\t            var _this3 = this;\n\t\n\t            forEach(this._directives, function (key) {\n\t                forEach(_this3._directives[key], function (object) {\n\t                    object.destroy();\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * Callback\n\t         * @param {Array} fileItems\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingAll = function onAfterAddingAll(fileItems) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingFile = function onAfterAddingFile(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onWhenAddingFileFailed = function onWhenAddingFileFailed(item, filter, options) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onBeforeUploadItem = function onBeforeUploadItem(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressItem = function onProgressItem(fileItem, progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressAll = function onProgressAll(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onSuccessItem = function onSuccessItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onErrorItem = function onErrorItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCancelItem = function onCancelItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteItem = function onCompleteItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteAll = function onCompleteAll() {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Returns the total progress\n\t         * @param {Number} [value]\n\t         * @returns {Number}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getTotalProgress = function _getTotalProgress(value) {\n\t            if (this.removeAfterUpload) return value || 0;\n\t\n\t            var notUploaded = this.getNotUploadedItems().length;\n\t            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t            var ratio = 100 / this.queue.length;\n\t            var current = (value || 0) * ratio / 100;\n\t\n\t            return Math.round(uploaded * ratio + current);\n\t        };\n\t        /**\n\t         * Returns array of filters\n\t         * @param {Array<Function>|String} filters\n\t         * @returns {Array<Function>}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getFilters = function _getFilters(filters) {\n\t            if (!filters) return this.filters;\n\t            if (isArray(filters)) return filters;\n\t            var names = filters.match(/[^\\s,]+/g);\n\t            return this.filters.filter(function (filter) {\n\t                return names.indexOf(filter.name) !== -1;\n\t            });\n\t        };\n\t        /**\n\t        * @param {Array<Function>} filters\n\t        * @returns {Array<Function>}\n\t        * @private\n\t        */\n\t\n\t\n\t        FileUploader.prototype._convertFiltersToPipes = function _convertFiltersToPipes(filters) {\n\t            var _this4 = this;\n\t\n\t            return filters.map(function (filter) {\n\t                var fn = bind(_this4, filter.fn);\n\t                fn.isAsync = filter.fn.length === 3;\n\t                fn.originalFilter = filter;\n\t                return fn;\n\t            });\n\t        };\n\t        /**\n\t         * Updates html\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._render = function _render() {\n\t            if (!$rootScope.$$phase) $rootScope.$apply();\n\t        };\n\t        /**\n\t         * Returns \"true\" if item is a file (not folder)\n\t         * @param {File|FileLikeObject} item\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._folderFilter = function _folderFilter(item) {\n\t            return !!(item.size || item.type);\n\t        };\n\t        /**\n\t         * Returns \"true\" if the limit has not been reached\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._queueLimitFilter = function _queueLimitFilter() {\n\t            return this.queue.length < this.queueLimit;\n\t        };\n\t        /**\n\t         * Checks whether upload successful\n\t         * @param {Number} status\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isSuccessCode = function _isSuccessCode(status) {\n\t            return status >= 200 && status < 300 || status === 304;\n\t        };\n\t        /**\n\t         * Transforms the server response\n\t         * @param {*} response\n\t         * @param {Object} headers\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._transformResponse = function _transformResponse(response, headers) {\n\t            var headersGetter = this._headersGetter(headers);\n\t            forEach($http.defaults.transformResponse, function (transformFn) {\n\t                response = transformFn(response, headersGetter);\n\t            });\n\t            return response;\n\t        };\n\t        /**\n\t         * Parsed response headers\n\t         * @param headers\n\t         * @returns {Object}\n\t         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._parseHeaders = function _parseHeaders(headers) {\n\t            var parsed = {},\n\t                key,\n\t                val,\n\t                i;\n\t\n\t            if (!headers) return parsed;\n\t\n\t            forEach(headers.split('\\n'), function (line) {\n\t                i = line.indexOf(':');\n\t                key = line.slice(0, i).trim().toLowerCase();\n\t                val = line.slice(i + 1).trim();\n\t\n\t                if (key) {\n\t                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                }\n\t            });\n\t\n\t            return parsed;\n\t        };\n\t        /**\n\t         * Returns function that returns headers\n\t         * @param {Object} parsedHeaders\n\t         * @returns {Function}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._headersGetter = function _headersGetter(parsedHeaders) {\n\t            return function (name) {\n\t                if (name) {\n\t                    return parsedHeaders[name.toLowerCase()] || null;\n\t                }\n\t                return parsedHeaders;\n\t            };\n\t        };\n\t        /**\n\t         * The XMLHttpRequest transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._xhrTransport = function _xhrTransport(item) {\n\t            var _this5 = this;\n\t\n\t            function getCorrectBlob(file) {\n\t                if (file instanceof Blob) {\n\t                    return file;\n\t                }\n\t\n\t                if (file.blob && file.blob instanceof Blob) {\n\t                    return file.blob;\n\t                }\n\t\n\t                return null;\n\t            }\n\t            var xhr = item._xhr = new XMLHttpRequest();\n\t            var sendable;\n\t\n\t            if (!item.disableMultipart) {\n\t                sendable = new FormData();\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        sendable.append(key, value);\n\t                    });\n\t                });\n\t\n\t                sendable.append(item.alias, getCorrectBlob(item._file), item.file.name);\n\t            } else {\n\t                sendable = item._file;\n\t            }\n\t\n\t            if (typeof item._file.size != 'number') {\n\t                throw new TypeError('The file specified is no longer valid');\n\t            }\n\t\n\t            xhr.upload.onprogress = function (event) {\n\t                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                _this5._onProgressItem(item, progress);\n\t            };\n\t\n\t            xhr.onload = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                var gist = _this5._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                var method = '_on' + gist + 'Item';\n\t                _this5[method](item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onerror = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onErrorItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onabort = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onCancelItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.open(item.method, item.url, true);\n\t\n\t            xhr.withCredentials = item.withCredentials;\n\t\n\t            forEach(item.headers, function (value, name) {\n\t                xhr.setRequestHeader(name, value);\n\t            });\n\t\n\t            xhr.send(sendable);\n\t        };\n\t        /**\n\t         * The IFrame transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._iframeTransport = function _iframeTransport(item) {\n\t            var _this6 = this;\n\t\n\t            var form = element('<form style=\"display: none;\" />');\n\t            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t            var input = item._input;\n\t\n\t            if (item._form) item._form.replaceWith(input); // remove old form\n\t            item._form = form; // save link to new form\n\t\n\t            input.prop('name', item.alias);\n\t\n\t            forEach(item.formData, function (obj) {\n\t                forEach(obj, function (value, key) {\n\t                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                    element_.val(value);\n\t                    form.append(element_);\n\t                });\n\t            });\n\t\n\t            form.prop({\n\t                action: item.url,\n\t                method: 'POST',\n\t                target: iframe.prop('name'),\n\t                enctype: 'multipart/form-data',\n\t                encoding: 'multipart/form-data' // old IE\n\t            });\n\t\n\t            iframe.bind('load', function () {\n\t                var html = '';\n\t                var status = 200;\n\t\n\t                try {\n\t                    // Fix for legacy IE browsers that loads internal error page\n\t                    // when failed WS response received. In consequence iframe\n\t                    // content access denied error is thrown becouse trying to\n\t                    // access cross domain page. When such thing occurs notifying\n\t                    // with empty response object. See more info at:\n\t                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                    // Note that if non standard 4xx or 5xx error code returned\n\t                    // from WS then response content can be accessed without error\n\t                    // but 'XHR' status becomes 200. In order to avoid confusion\n\t                    // returning response via same 'success' event handler.\n\t\n\t                    // fixed angular.contents() for iframes\n\t                    html = iframe[0].contentDocument.body.innerHTML;\n\t                } catch (e) {\n\t                    // in case we run into the access-is-denied error or we have another error on the server side\n\t                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                    status = 500;\n\t                }\n\t\n\t                var xhr = { response: html, status: status, dummy: true };\n\t                var headers = {};\n\t                var response = _this6._transformResponse(xhr.response, headers);\n\t\n\t                _this6._onSuccessItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            });\n\t\n\t            form.abort = function () {\n\t                var xhr = { status: 0, dummy: true };\n\t                var headers = {};\n\t                var response;\n\t\n\t                iframe.unbind('load').prop('src', 'javascript:false;');\n\t                form.replaceWith(input);\n\t\n\t                _this6._onCancelItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            input.after(form);\n\t            form.append(input).append(iframe);\n\t\n\t            form[0].submit();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onWhenAddingFileFailed = function _onWhenAddingFileFailed(item, filter, options) {\n\t            this.onWhenAddingFileFailed(item, filter, options);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingFile = function _onAfterAddingFile(item) {\n\t            this.onAfterAddingFile(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Array<FileItem>} items\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingAll = function _onAfterAddingAll(items) {\n\t            this.onAfterAddingAll(items);\n\t        };\n\t        /**\n\t         *  Inner callback\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onBeforeUploadItem = function _onBeforeUploadItem(item) {\n\t            item._onBeforeUpload();\n\t            this.onBeforeUploadItem(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onProgressItem = function _onProgressItem(item, progress) {\n\t            var total = this._getTotalProgress(progress);\n\t            this.progress = total;\n\t            item._onProgress(progress);\n\t            this.onProgressItem(item, progress);\n\t            this.onProgressAll(total);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onSuccessItem = function _onSuccessItem(item, response, status, headers) {\n\t            item._onSuccess(response, status, headers);\n\t            this.onSuccessItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onErrorItem = function _onErrorItem(item, response, status, headers) {\n\t            item._onError(response, status, headers);\n\t            this.onErrorItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCancelItem = function _onCancelItem(item, response, status, headers) {\n\t            item._onCancel(response, status, headers);\n\t            this.onCancelItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCompleteItem = function _onCompleteItem(item, response, status, headers) {\n\t            item._onComplete(response, status, headers);\n\t            this.onCompleteItem(item, response, status, headers);\n\t\n\t            var nextItem = this.getReadyItems()[0];\n\t            this.isUploading = false;\n\t\n\t            if (isDefined(nextItem)) {\n\t                nextItem.upload();\n\t                return;\n\t            }\n\t\n\t            this.onCompleteAll();\n\t            this.progress = this._getTotalProgress();\n\t            this._render();\n\t        };\n\t        /**********************\n\t         * STATIC\n\t         **********************/\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFile = function isFile(value) {\n\t            return File && value instanceof File;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFileLikeObject = function isFileLikeObject(value) {\n\t            return value instanceof FileLikeObject;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return isObject(value) && 'length' in value;\n\t        };\n\t        /**\n\t         * Inherits a target (Class_1) by a source (Class_2)\n\t         * @param {Function} target\n\t         * @param {Function} source\n\t         */\n\t\n\t\n\t        FileUploader.inherit = function inherit(target, source) {\n\t            target.prototype = Object.create(source.prototype);\n\t            target.prototype.constructor = target;\n\t            target.super_ = source;\n\t        };\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t}\n\t\n\t__identity.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', '$timeout', 'FileLikeObject', 'FileItem', 'Pipeline'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    isElement = _angular.isElement,\n\t    isString = _angular.isString;\n\tfunction __identity() {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\n\t         * Creates file like object from fake path string\n\t         * @param {String} path\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromFakePath = function _createFromFakePath(path) {\n\t            this.lastModifiedDate = null;\n\t            this.size = null;\n\t            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t        };\n\t        /**\n\t         * Creates file like object from object\n\t         * @param {File|FileLikeObject} object\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromObject = function _createFromObject(object) {\n\t            this.lastModifiedDate = copy(object.lastModifiedDate);\n\t            this.size = object.size;\n\t            this.type = object.type;\n\t            this.name = object.name;\n\t\n\t            this.blob = object;\n\t        };\n\t\n\t        return FileLikeObject;\n\t    }();\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    element = _angular.element,\n\t    isElement = _angular.isElement;\n\tfunction __identity($compile, FileLikeObject) {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.upload = function upload() {\n\t            try {\n\t                this.uploader.uploadItem(this);\n\t            } catch (e) {\n\t                var message = e.name + ':' + e.message;\n\t                this.uploader._onCompleteItem(this, message, e.code, []);\n\t                this.uploader._onErrorItem(this, message, e.code, []);\n\t            }\n\t        };\n\t        /**\n\t         * Cancels uploading of FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.cancel = function cancel() {\n\t            this.uploader.cancelItem(this);\n\t        };\n\t        /**\n\t         * Removes a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.remove = function remove() {\n\t            this.uploader.removeFromQueue(this);\n\t        };\n\t        /**\n\t         * Callback\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onBeforeUpload = function onBeforeUpload() {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onProgress = function onProgress(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onSuccess = function onSuccess(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onError = function onError(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onCancel = function onCancel(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onComplete = function onComplete(response, status, headers) {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Inner callback\n\t         */\n\t\n\t\n\t        FileItem.prototype._onBeforeUpload = function _onBeforeUpload() {\n\t            this.isReady = true;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.onBeforeUpload();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onProgress = function _onProgress(progress) {\n\t            this.progress = progress;\n\t            this.onProgress(progress);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onSuccess = function _onSuccess(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = true;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 100;\n\t            this.index = null;\n\t            this.onSuccess(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onError = function _onError(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = true;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onError(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onCancel = function _onCancel(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = true;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onCancel(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onComplete = function _onComplete(response, status, headers) {\n\t            this.onComplete(response, status, headers);\n\t            if (this.removeAfterUpload) this.remove();\n\t        };\n\t        /**\n\t         * Destroys a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype._destroy = function _destroy() {\n\t            if (this._input) this._input.remove();\n\t            if (this._form) this._form.remove();\n\t            delete this._form;\n\t            delete this._input;\n\t        };\n\t        /**\n\t         * Prepares to uploading\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._prepareToUploading = function _prepareToUploading() {\n\t            this.index = this.index || ++this.uploader._nextIndex;\n\t            this.isReady = true;\n\t        };\n\t        /**\n\t         * Replaces input element on his clone\n\t         * @param {JQLite|jQuery} input\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._replaceNode = function _replaceNode(input) {\n\t            var clone = $compile(input.clone())(input.scope());\n\t            clone.prop('value', null); // FF fix\n\t            input.css('display', 'none');\n\t            input.after(clone); // remove jquery dependency\n\t        };\n\t\n\t        return FileItem;\n\t    }();\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity() {\n\t    var FileDirective = function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\n\t         * Binds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.bind = function bind() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this.element.bind(key, this[prop]);\n\t            }\n\t        };\n\t        /**\n\t         * Unbinds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.unbind = function unbind() {\n\t            for (var key in this.events) {\n\t                this.element.unbind(key, this.events[key]);\n\t            }\n\t        };\n\t        /**\n\t         * Destroys directive\n\t         */\n\t\n\t\n\t        FileDirective.prototype.destroy = function destroy() {\n\t            var index = this.uploader._directives[this.prop].indexOf(this);\n\t            this.uploader._directives[this.prop].splice(index, 1);\n\t            this.unbind();\n\t            // this.element = null;\n\t        };\n\t        /**\n\t         * Saves links to functions\n\t         * @private\n\t         */\n\t\n\t\n\t        FileDirective.prototype._saveLinks = function _saveLinks() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this[prop] = this[prop].bind(this);\n\t            }\n\t        };\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity($compile, FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * If returns \"true\" then HTMLInputElement will be cleared\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.isEmptyAfterSelection = function isEmptyAfterSelection() {\n\t            return !!this.element.attr('multiple');\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileSelect.prototype.onChange = function onChange() {\n\t            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t\n\t            if (!this.uploader.isHTML5) this.destroy();\n\t            this.uploader.addToQueue(files, options, filters);\n\t            if (this.isEmptyAfterSelection()) {\n\t                this.element.prop('value', null);\n\t                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n\t            }\n\t        };\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileDirective'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = __identity;\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    bind = _angular.bind,\n\t    isUndefined = _angular.isUndefined;\n\tfunction __identity($q) {\n\t\n\t  return function () {\n\t    /**\n\t     * @param {Array<Function>} pipes\n\t     */\n\t    function Pipeline() {\n\t      var pipes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t      _classCallCheck(this, Pipeline);\n\t\n\t      this.pipes = pipes;\n\t    }\n\t\n\t    Pipeline.prototype.next = function next(args) {\n\t      var pipe = this.pipes.shift();\n\t      if (isUndefined(pipe)) {\n\t        this.onSuccessful.apply(this, _toConsumableArray(args));\n\t        return;\n\t      }\n\t      var err = new Error('The filter has not passed');\n\t      err.pipe = pipe;\n\t      err.args = args;\n\t      if (pipe.isAsync) {\n\t        var deferred = $q.defer();\n\t        var onFulfilled = bind(this, this.next, args);\n\t        var onRejected = bind(this, this.onThrown, err);\n\t        deferred.promise.then(onFulfilled, onRejected);\n\t        pipe.apply(undefined, _toConsumableArray(args).concat([deferred]));\n\t      } else {\n\t        var isDone = Boolean(pipe.apply(undefined, _toConsumableArray(args)));\n\t        if (isDone) {\n\t          this.next(args);\n\t        } else {\n\t          this.onThrown(err);\n\t        }\n\t      }\n\t    };\n\t\n\t    Pipeline.prototype.exec = function exec() {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      this.next(args);\n\t    };\n\t\n\t    Pipeline.prototype.onThrown = function onThrown(err) {};\n\t\n\t    Pipeline.prototype.onSuccessful = function onSuccessful() {};\n\t\n\t    return Pipeline;\n\t  }();\n\t}\n\t\n\t__identity.$inject = ['$q'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDrop = function onDrop(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!transfer) return;\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            this.uploader.addToQueue(transfer.files, options, filters);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragOver = function onDragOver(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!this._haveFiles(transfer.types)) return;\n\t            transfer.dropEffect = 'copy';\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._addOverClass, this);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragLeave = function onDragLeave(event) {\n\t            if (event.currentTarget === this.element[0]) return;\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._getTransfer = function _getTransfer(event) {\n\t            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._preventAndStop = function _preventAndStop(event) {\n\t            event.preventDefault();\n\t            event.stopPropagation();\n\t        };\n\t        /**\n\t         * Returns \"true\" if types contains files\n\t         * @param {Object} types\n\t         */\n\t\n\t\n\t        FileDrop.prototype._haveFiles = function _haveFiles(types) {\n\t            if (!types) return false;\n\t            if (types.indexOf) {\n\t                return types.indexOf('Files') !== -1;\n\t            } else if (types.contains) {\n\t                return types.contains('Files');\n\t            } else {\n\t                return false;\n\t            }\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._addOverClass = function _addOverClass(item) {\n\t            item.addOverClass();\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._removeOverClass = function _removeOverClass(item) {\n\t            item.removeOverClass();\n\t        };\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Adds over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.addOverClass = function addOverClass() {\n\t            this.element.addClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Removes over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.removeOverClass = function removeOverClass() {\n\t            this.element.removeClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Returns over class\n\t         * @returns {String}\n\t         */\n\t\n\t\n\t        FileOver.prototype.getOverClass = function getOverClass() {\n\t            return this.overClass;\n\t        };\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element,\n\t                scope: scope\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity(FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['FileUploader', 'FileOver'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// angular-file-upload.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 135cc178d79795ba0e15","'use strict';\n\n\nimport CONFIG from './config.json';\n\n\nimport options from './values/options'\n\n\nimport serviceFileUploader from './services/FileUploader';\nimport serviceFileLikeObject from './services/FileLikeObject';\nimport serviceFileItem from './services/FileItem';\nimport serviceFileDirective from './services/FileDirective';\nimport serviceFileSelect from './services/FileSelect';\nimport servicePipeline from './services/Pipeline';\nimport serviceFileDrop from './services/FileDrop';\nimport serviceFileOver from './services/FileOver';\n\n\nimport directiveFileSelect from './directives/FileSelect';\nimport directiveFileDrop from './directives/FileDrop';\nimport directiveFileOver from './directives/FileOver';\n\n\nangular\n    .module(CONFIG.name, [])\n    .value('fileUploaderOptions', options)\n    .factory('FileUploader', serviceFileUploader)\n    .factory('FileLikeObject', serviceFileLikeObject)\n    .factory('FileItem', serviceFileItem)\n    .factory('FileDirective', serviceFileDirective)\n    .factory('FileSelect', serviceFileSelect)\n    .factory('FileDrop', serviceFileDrop)\n    .factory('FileOver', serviceFileOver)\n    .factory('Pipeline', servicePipeline)\n    .directive('nvFileSelect', directiveFileSelect)\n    .directive('nvFileDrop', directiveFileDrop)\n    .directive('nvFileOver', directiveFileOver)\n    .run([\n        'FileUploader',\n        'FileLikeObject',\n        'FileItem',\n        'FileDirective',\n        'FileSelect',\n        'FileDrop',\n        'FileOver',\n        'Pipeline',\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver, Pipeline) {\n            // only for compatibility\n            FileUploader.FileLikeObject = FileLikeObject;\n            FileUploader.FileItem = FileItem;\n            FileUploader.FileDirective = FileDirective;\n            FileUploader.FileSelect = FileSelect;\n            FileUploader.FileDrop = FileDrop;\n            FileUploader.FileOver = FileOver;\n            FileUploader.Pipeline = Pipeline;\n        }\n    ]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = {\"name\":\"angularFileUpload\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config.json\n// module id = 1\n// module chunks = 0 1","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false\n};\n\n\n// WEBPACK FOOTER //\n// ./src/values/options.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    bind,\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    isUndefined,\n    element\n    } = angular;\n\n\nexport default function __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem, Pipeline) {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            let incomingQueue = this.isArrayLikeObject(files) ? Array.prototype.slice.call(files): [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            let next = () => {\n                let something = incomingQueue.shift();\n                \n                if (isUndefined(something)) {\n                    return done();\n                }\n                \n                let fileLikeObject = this.isFile(something) ? something : new FileLikeObject(something);\n                let pipes = this._convertFiltersToPipes(arrayOfFilters);\n                let pipeline = new Pipeline(pipes);\n                let onThrown = (err) => {\n                    let {originalFilter} = err.pipe;\n                    let [fileLikeObject, options] = err.args;\n                    this._onWhenAddingFileFailed(fileLikeObject, originalFilter, options);\n                    next();\n                };\n                let onSuccessful = (fileLikeObject, options) => {\n                    let fileItem = new FileItem(this, fileLikeObject, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                    next();\n                };\n                pipeline.onThrown = onThrown;\n                pipeline.onSuccessful = onSuccessful;\n                pipeline.exec(fileLikeObject, options);\n            };\n                \n            let done = () => {\n                if(this.queue.length !== count) {\n                    this._onAfterAddingAll(addedFileItems);\n                    this.progress = this._getTotalProgress();\n                }\n\n                this._render();\n                if (this.autoUpload) this.uploadAll();\n            };\n            \n            next();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this._onBeforeUploadItem(item);\n            if (item.isCancel) return;\n\n            item.isUploading = true;\n            this.isUploading = true;\n            this[transport](item);\n            this._render();\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if (!item) return;\n            item.isCancel = true;\n            if(item.isUploading) {\n                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n                item[prop].abort();\n            } else {\n                let dummy = [undefined, 0, {}];\n                let onNextTick = () => {\n                    this._onCancelItem(item, ...dummy);\n                    this._onCompleteItem(item, ...dummy);\n                };\n                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n            }\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n       /**\n       * @param {Array<Function>} filters\n       * @returns {Array<Function>}\n       * @private\n       */\n       _convertFiltersToPipes(filters) {\n            return filters\n                .map(filter => {\n                    let fn = bind(this, filter.fn);\n                    fn.isAsync = filter.fn.length === 3;\n                    fn.originalFilter = filter;\n                    return fn;\n                });\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            function getCorrectBlob(file) {\n                if (file instanceof Blob) {\n                    return file\n                }\n\n                if (file.blob && file.blob instanceof Blob) {\n                    return file.blob\n                }\n\n                return null\n            }\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, getCorrectBlob(item._file), item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\n__identity.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    '$timeout',\n    'FileLikeObject',\n    'FileItem',\n    'Pipeline'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileUploader.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default function __identity() {\n    \n    \n    return class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n\n            this.blob = object\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileLikeObject.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default function __identity($compile, FileLikeObject) {\n    \n    \n    return class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                var message = e.name + ':' + e.message;\n                this.uploader._onCompleteItem(this, message, e.code, []);\n                this.uploader._onErrorItem(this, message, e.code, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileItem.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity() {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDirective.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity($compile, FileDirective) {\n    \n    \n    return class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return !!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n            }\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileDirective'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileSelect.js","'use strict';\n\n\nconst {\n  bind,\n  isUndefined\n} = angular;\n\n\nexport default function __identity($q) {\n\n\n  return class Pipeline {\n    /**\n     * @param {Array<Function>} pipes\n     */\n    constructor(pipes = []) {\n      this.pipes = pipes;\n    }\n    next(args) {\n      let pipe = this.pipes.shift();\n      if (isUndefined(pipe)) {\n        this.onSuccessful(...args);\n        return;\n      }\n      let err = new Error('The filter has not passed');\n      err.pipe = pipe;\n      err.args = args;\n      if (pipe.isAsync) {\n        let deferred = $q.defer();\n        let onFulfilled = bind(this, this.next, args);\n        let onRejected = bind(this, this.onThrown, err);\n        deferred.promise.then(onFulfilled, onRejected);\n        pipe(...args, deferred);\n      } else {\n        let isDone = Boolean(pipe(...args));\n        if (isDone) {\n          this.next(args);\n        } else {\n          this.onThrown(err);\n        }\n      }\n    }\n    exec(...args) {\n      this.next(args);\n    }\n    onThrown(err) {\n\n    }\n    onSuccessful(...args) {\n\n    }\n  }\n  \n}\n\n__identity.$inject = [\n  '$q'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/Pipeline.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            this.uploader.addToQueue(transfer.files, options, filters);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileOver.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileSelect) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element,\n                scope: scope\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileSelect.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileDrop) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity(FileUploader, FileOver) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileOver.js"],"sourceRoot":""}